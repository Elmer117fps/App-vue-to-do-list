{"ast":null,"code":"import \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.string.trim.js\";\nimport { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, createCommentVNode as _createCommentVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, normalizeClass as _normalizeClass, vModelText as _vModelText, withKeys as _withKeys, withDirectives as _withDirectives, renderList as _renderList, Fragment as _Fragment } from \"vue\";\nvar _hoisted_1 = {\n  \"class\": \"container\"\n};\nvar _hoisted_2 = {\n  \"class\": \"counter\"\n};\nvar _hoisted_3 = {\n  key: 0,\n  \"class\": \"loading\"\n};\nvar _hoisted_4 = {\n  key: 1,\n  \"class\": \"message error\"\n};\nvar _hoisted_5 = {\n  key: 2,\n  \"class\": \"message success\"\n};\nvar _hoisted_6 = {\n  \"class\": \"stats\"\n};\nvar _hoisted_7 = {\n  \"class\": \"tabs\"\n};\nvar _hoisted_8 = {\n  key: 0,\n  \"class\": \"tab-content active\"\n};\nvar _hoisted_9 = {\n  \"class\": \"new-task\"\n};\nvar _hoisted_10 = [\"disabled\"];\nvar _hoisted_11 = [\"disabled\"];\nvar _hoisted_12 = {\n  key: 0,\n  \"class\": \"task-list\"\n};\nvar _hoisted_13 = [\"checked\", \"onChange\"];\nvar _hoisted_14 = {\n  \"class\": \"task-id\"\n};\nvar _hoisted_15 = {\n  \"class\": \"task-text\"\n};\nvar _hoisted_16 = {\n  \"class\": \"task-actions\"\n};\nvar _hoisted_17 = [\"onClick\", \"disabled\"];\nvar _hoisted_18 = {\n  \"class\": \"empty-state\"\n};\nvar _hoisted_19 = {\n  \"class\": \"controls\"\n};\nvar _hoisted_20 = [\"disabled\"];\nvar _hoisted_21 = [\"disabled\"];\nvar _hoisted_22 = {\n  key: 1,\n  \"class\": \"tab-content active\"\n};\nvar _hoisted_23 = {\n  \"class\": \"console-output\",\n  ref: \"consoleOutput\"\n};\nvar _hoisted_24 = {\n  key: 0,\n  \"class\": \"console-line\"\n};\nvar _hoisted_25 = {\n  style: {\n    \"margin-top\": \"15px\",\n    \"text-align\": \"center\"\n  }\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _$setup$user;\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"h1\", null, [_createTextVNode(_toDisplayString(((_$setup$user = $setup.user) === null || _$setup$user === void 0 ? void 0 : _$setup$user.name) || 'Usuario') + \"'s Todo List \", 1 /* TEXT */), _createElementVNode(\"span\", _hoisted_2, _toDisplayString($setup.stats.pending) + \" pendientes\", 1 /* TEXT */)]), _createCommentVNode(\" Loading state \"), $setup.loading ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, _cache[10] || (_cache[10] = [_createElementVNode(\"p\", null, \"Cargando...\", -1 /* HOISTED */)]))) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" Error message \"), $setup.error ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, [_createTextVNode(_toDisplayString($setup.error) + \" \", 1 /* TEXT */), _createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = function () {\n      return $setup.loadData && $setup.loadData.apply($setup, arguments);\n    }),\n    \"class\": \"btn btn-primary\",\n    style: {\n      \"margin-left\": \"10px\"\n    }\n  }, \" Reintentar \")])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" Success message \"), $setup.successMessage ? (_openBlock(), _createElementBlock(\"div\", _hoisted_5, _toDisplayString($setup.successMessage), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), !$setup.loading && !$setup.error ? (_openBlock(), _createElementBlock(_Fragment, {\n    key: 3\n  }, [_createCommentVNode(\" Stats \"), _createElementVNode(\"div\", _hoisted_6, [_createElementVNode(\"span\", null, \"Total: \" + _toDisplayString($setup.stats.total), 1 /* TEXT */), _createElementVNode(\"span\", null, \"Completadas: \" + _toDisplayString($setup.stats.completed), 1 /* TEXT */), _createElementVNode(\"span\", null, \"Pendientes: \" + _toDisplayString($setup.stats.pending), 1 /* TEXT */)]), _createCommentVNode(\" Tabs \"), _createElementVNode(\"div\", _hoisted_7, [_createElementVNode(\"div\", {\n    \"class\": _normalizeClass([\"tab\", {\n      active: $setup.activeTab === 'app'\n    }]),\n    onClick: _cache[1] || (_cache[1] = function ($event) {\n      return $setup.activeTab = 'app';\n    })\n  }, \" Aplicación \", 2 /* CLASS */), _createElementVNode(\"div\", {\n    \"class\": _normalizeClass([\"tab\", {\n      active: $setup.activeTab === 'console'\n    }]),\n    onClick: _cache[2] || (_cache[2] = function ($event) {\n      return $setup.activeTab = 'console';\n    })\n  }, \" Consola \", 2 /* CLASS */)]), _createCommentVNode(\" App Tab \"), $setup.activeTab === 'app' ? (_openBlock(), _createElementBlock(\"div\", _hoisted_8, [_createCommentVNode(\" Add new task \"), _createElementVNode(\"div\", _hoisted_9, [_withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = function ($event) {\n      return $setup.newTaskText = $event;\n    }),\n    onKeyup: _cache[4] || (_cache[4] = _withKeys(function () {\n      return $setup.addTask && $setup.addTask.apply($setup, arguments);\n    }, [\"enter\"])),\n    disabled: $setup.addingTask,\n    type: \"text\",\n    placeholder: \"Añadir nueva tarea...\"\n  }, null, 40 /* PROPS, NEED_HYDRATION */, _hoisted_10), [[_vModelText, $setup.newTaskText]]), _createElementVNode(\"button\", {\n    onClick: _cache[5] || (_cache[5] = function () {\n      return $setup.addTask && $setup.addTask.apply($setup, arguments);\n    }),\n    disabled: !$setup.newTaskText.trim() || $setup.addingTask\n  }, _toDisplayString($setup.addingTask ? 'Añadiendo...' : 'Añadir'), 9 /* TEXT, PROPS */, _hoisted_11)]), _createCommentVNode(\" Task list \"), $setup.filteredTodos.length > 0 ? (_openBlock(), _createElementBlock(\"ul\", _hoisted_12, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.filteredTodos, function (todo) {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: todo.id,\n      \"class\": _normalizeClass([\"task-item\", {\n        completed: todo.complete\n      }])\n    }, [_createElementVNode(\"input\", {\n      type: \"checkbox\",\n      \"class\": \"task-checkbox\",\n      checked: todo.complete,\n      onChange: function onChange($event) {\n        return $setup.toggleComplete(todo.id, !todo.complete);\n      }\n    }, null, 40 /* PROPS, NEED_HYDRATION */, _hoisted_13), _createElementVNode(\"span\", _hoisted_14, _toDisplayString(todo.id), 1 /* TEXT */), _createElementVNode(\"span\", _hoisted_15, _toDisplayString(todo.task), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_16, [_createElementVNode(\"button\", {\n      onClick: function onClick($event) {\n        return $setup.deleteSingleTodo(todo.id);\n      },\n      \"class\": \"btn btn-danger\",\n      disabled: $setup.deletingTodo === todo.id\n    }, _toDisplayString($setup.deletingTodo === todo.id ? '...' : 'Eliminar'), 9 /* TEXT, PROPS */, _hoisted_17)])], 2 /* CLASS */);\n  }), 128 /* KEYED_FRAGMENT */))])) : (_openBlock(), _createElementBlock(_Fragment, {\n    key: 1\n  }, [_createCommentVNode(\" Empty state \"), _createElementVNode(\"div\", _hoisted_18, [_cache[11] || (_cache[11] = _createElementVNode(\"h3\", null, \"No hay tareas\", -1 /* HOISTED */)), _createElementVNode(\"p\", null, _toDisplayString($setup.showCompleted ? 'No tienes tareas aún' : 'No hay tareas pendientes'), 1 /* TEXT */)])], 2112 /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */)), _createCommentVNode(\" Controls \"), _createElementVNode(\"div\", _hoisted_19, [_createElementVNode(\"button\", {\n    onClick: _cache[6] || (_cache[6] = function () {\n      return $setup.removeCompletedTasks && $setup.removeCompletedTasks.apply($setup, arguments);\n    }),\n    disabled: !$setup.hasCompletedTasks || $setup.removingCompleted,\n    \"class\": \"btn btn-danger\"\n  }, _toDisplayString($setup.removingCompleted ? 'Eliminando...' : 'Eliminar completadas'), 9 /* TEXT, PROPS */, _hoisted_20), _createElementVNode(\"button\", {\n    onClick: _cache[7] || (_cache[7] = function () {\n      return $setup.toggleShowCompleted && $setup.toggleShowCompleted.apply($setup, arguments);\n    }),\n    \"class\": \"btn btn-primary\"\n  }, _toDisplayString($setup.showCompleted ? 'Ocultar completadas' : 'Mostrar completadas'), 1 /* TEXT */), _createElementVNode(\"button\", {\n    onClick: _cache[8] || (_cache[8] = function () {\n      return $setup.refreshData && $setup.refreshData.apply($setup, arguments);\n    }),\n    disabled: $setup.loading,\n    \"class\": \"btn btn-secondary\"\n  }, _toDisplayString($setup.loading ? 'Actualizando...' : 'Actualizar'), 9 /* TEXT, PROPS */, _hoisted_21)])])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" Console Tab \"), $setup.activeTab === 'console' ? (_openBlock(), _createElementBlock(\"div\", _hoisted_22, [_createElementVNode(\"div\", _hoisted_23, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.consoleLogs, function (log, index) {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: index,\n      \"class\": \"console-line\"\n    }, _toDisplayString(log), 1 /* TEXT */);\n  }), 128 /* KEYED_FRAGMENT */)), $setup.consoleLogs.length === 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_24, \" Consola vacía. Las acciones aparecerán aquí. \")) : _createCommentVNode(\"v-if\", true)], 512 /* NEED_PATCH */), _createElementVNode(\"div\", _hoisted_25, [_createElementVNode(\"button\", {\n    onClick: _cache[9] || (_cache[9] = function () {\n      return $setup.clearConsole && $setup.clearConsole.apply($setup, arguments);\n    }),\n    \"class\": \"btn btn-secondary\"\n  }, \" Limpiar Consola \")])])) : _createCommentVNode(\"v-if\", true)], 64 /* STABLE_FRAGMENT */)) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["ref","style","_createElementBlock","_hoisted_1","_createElementVNode","_$setup$user","$setup","user","name","_hoisted_2","_toDisplayString","stats","pending","_createCommentVNode","loading","_hoisted_3","_cache","error","_hoisted_4","onClick","loadData","apply","arguments","successMessage","_hoisted_5","_Fragment","key","_hoisted_6","total","completed","_hoisted_7","_normalizeClass","active","activeTab","$event","_hoisted_8","_hoisted_9","newTaskText","onKeyup","_withKeys","addTask","disabled","addingTask","type","placeholder","trim","_hoisted_11","filteredTodos","length","_hoisted_12","_renderList","todo","id","complete","checked","onChange","toggleComplete","_hoisted_14","_hoisted_15","task","_hoisted_16","deleteSingleTodo","deletingTodo","_hoisted_17","_hoisted_18","showCompleted","_hoisted_19","removeCompletedTasks","hasCompletedTasks","removingCompleted","_hoisted_20","toggleShowCompleted","refreshData","_hoisted_21","_hoisted_22","_hoisted_23","consoleLogs","log","index","_hoisted_24","_hoisted_25","clearConsole"],"sources":["C:\\Users\\alber\\OneDrive\\Escritorio\\App_vue to-do list\\vue-todo-app\\src\\App.vue"],"sourcesContent":["<template>\n  <div class=\"container\">\n    <h1>\n      {{ user?.name || 'Usuario' }}'s Todo List\n      <span class=\"counter\">{{ stats.pending }} pendientes</span>\n    </h1>\n\n    <!-- Loading state -->\n    <div v-if=\"loading\" class=\"loading\">\n      <p>Cargando...</p>\n    </div>\n\n    <!-- Error message -->\n    <div v-if=\"error\" class=\"message error\">\n      {{ error }}\n      <button @click=\"loadData\" class=\"btn btn-primary\" style=\"margin-left: 10px;\">\n        Reintentar\n      </button>\n    </div>\n\n    <!-- Success message -->\n    <div v-if=\"successMessage\" class=\"message success\">\n      {{ successMessage }}\n    </div>\n\n    <template v-if=\"!loading && !error\">\n      <!-- Stats -->\n      <div class=\"stats\">\n        <span>Total: {{ stats.total }}</span>\n        <span>Completadas: {{ stats.completed }}</span>\n        <span>Pendientes: {{ stats.pending }}</span>\n      </div>\n\n      <!-- Tabs -->\n      <div class=\"tabs\">\n        <div \n          class=\"tab\" \n          :class=\"{ active: activeTab === 'app' }\"\n          @click=\"activeTab = 'app'\"\n        >\n          Aplicación\n        </div>\n        <div \n          class=\"tab\" \n          :class=\"{ active: activeTab === 'console' }\"\n          @click=\"activeTab = 'console'\"\n        >\n          Consola\n        </div>\n      </div>\n\n      <!-- App Tab -->\n      <div v-if=\"activeTab === 'app'\" class=\"tab-content active\">\n        <!-- Add new task -->\n        <div class=\"new-task\">\n          <input\n            v-model=\"newTaskText\"\n            @keyup.enter=\"addTask\"\n            :disabled=\"addingTask\"\n            type=\"text\"\n            placeholder=\"Añadir nueva tarea...\"\n          />\n          <button \n            @click=\"addTask\" \n            :disabled=\"!newTaskText.trim() || addingTask\"\n          >\n            {{ addingTask ? 'Añadiendo...' : 'Añadir' }}\n          </button>\n        </div>\n\n        <!-- Task list -->\n        <ul class=\"task-list\" v-if=\"filteredTodos.length > 0\">\n          <li\n            v-for=\"todo in filteredTodos\"\n            :key=\"todo.id\"\n            class=\"task-item\"\n            :class=\"{ completed: todo.complete }\"\n          >\n            <input\n              type=\"checkbox\"\n              class=\"task-checkbox\"\n              :checked=\"todo.complete\"\n              @change=\"toggleComplete(todo.id, !todo.complete)\"\n            />\n            <span class=\"task-id\">{{ todo.id }}</span>\n            <span class=\"task-text\">{{ todo.task }}</span>\n            <div class=\"task-actions\">\n              <button\n                @click=\"deleteSingleTodo(todo.id)\"\n                class=\"btn btn-danger\"\n                :disabled=\"deletingTodo === todo.id\"\n              >\n                {{ deletingTodo === todo.id ? '...' : 'Eliminar' }}\n              </button>\n            </div>\n          </li>\n        </ul>\n\n        <!-- Empty state -->\n        <div v-else class=\"empty-state\">\n          <h3>No hay tareas</h3>\n          <p>{{ showCompleted ? 'No tienes tareas aún' : 'No hay tareas pendientes' }}</p>\n        </div>\n\n        <!-- Controls -->\n        <div class=\"controls\">\n          <button\n            @click=\"removeCompletedTasks\"\n            :disabled=\"!hasCompletedTasks || removingCompleted\"\n            class=\"btn btn-danger\"\n          >\n            {{ removingCompleted ? 'Eliminando...' : 'Eliminar completadas' }}\n          </button>\n          <button\n            @click=\"toggleShowCompleted\"\n            class=\"btn btn-primary\"\n          >\n            {{ showCompleted ? 'Ocultar completadas' : 'Mostrar completadas' }}\n          </button>\n          <button\n            @click=\"refreshData\"\n            :disabled=\"loading\"\n            class=\"btn btn-secondary\"\n          >\n            {{ loading ? 'Actualizando...' : 'Actualizar' }}\n          </button>\n        </div>\n      </div>\n\n      <!-- Console Tab -->\n      <div v-if=\"activeTab === 'console'\" class=\"tab-content active\">\n        <div class=\"console-output\" ref=\"consoleOutput\">\n          <div v-for=\"(log, index) in consoleLogs\" :key=\"index\" class=\"console-line\">\n            {{ log }}\n          </div>\n          <div v-if=\"consoleLogs.length === 0\" class=\"console-line\">\n            Consola vacía. Las acciones aparecerán aquí.\n          </div>\n        </div>\n        <div style=\"margin-top: 15px; text-align: center;\">\n          <button @click=\"clearConsole\" class=\"btn btn-secondary\">\n            Limpiar Consola\n          </button>\n        </div>\n      </div>\n    </template>\n  </div>\n</template>\n\n<script>\nimport { ref, computed, onMounted, nextTick, watch } from 'vue';\nimport { ApiService } from './services/apiService.js';\n\nexport default {\n  name: 'App',\n  setup() {\n    // Reactive state\n    const todos = ref([]);\n    const user = ref(null);\n    const loading = ref(false);\n    const error = ref('');\n    const successMessage = ref('');\n    const newTaskText = ref('');\n    const showCompleted = ref(true);\n    const activeTab = ref('app');\n    const consoleLogs = ref([]);\n    const consoleOutput = ref();\n\n    // Action states\n    const addingTask = ref(false);\n    const removingCompleted = ref(false);\n    const deletingTodo = ref(null);\n\n    // Computed properties\n    const filteredTodos = computed(() => {\n      return showCompleted.value \n        ? todos.value \n        : todos.value.filter(todo => !todo.complete);\n    });\n\n    const stats = computed(() => {\n      const total = todos.value.length;\n      const completed = todos.value.filter(todo => todo.complete).length;\n      const pending = total - completed;\n      \n      return { total, completed, pending };\n    });\n\n    const hasCompletedTasks = computed(() => {\n      return todos.value.some(todo => todo.complete);\n    });\n\n    // Console logging\n    const logToConsole = (message) => {\n      consoleLogs.value.push(`[${new Date().toLocaleTimeString()}] ${message}`);\n      nextTick(() => {\n        if (consoleOutput.value) {\n          consoleOutput.value.scrollTop = consoleOutput.value.scrollHeight;\n        }\n      });\n    };\n\n    const clearConsole = () => {\n      consoleLogs.value = [];\n      logToConsole('Consola limpiada');\n    };\n\n    // Message handling\n    const showMessage = (message, isError = false) => {\n      if (isError) {\n        error.value = message;\n        successMessage.value = '';\n      } else {\n        successMessage.value = message;\n        error.value = '';\n      }\n      \n      setTimeout(() => {\n        error.value = '';\n        successMessage.value = '';\n      }, 3000);\n    };\n\n    // Data loading\n    const loadData = async () => {\n      loading.value = true;\n      error.value = '';\n      \n      try {\n        // Check API health first\n        const apiHealthy = await ApiService.checkApiHealth();\n        if (!apiHealthy) {\n          throw new Error('El servidor JSON no está disponible. Asegúrate de ejecutar: npm run server');\n        }\n\n        // Load todos and user\n        const [todosData, usersData] = await Promise.all([\n          ApiService.getTodos(),\n          ApiService.getUsers()\n        ]);\n        \n        todos.value = todosData;\n        user.value = usersData[0] || { id: 1, name: 'Usuario' };\n        \n        logToConsole(`${user.value.name}'s Todo List cargada (${stats.value.pending} pendientes)`);\n        logToConsole(`Total de tareas: ${stats.value.total}`);\n        \n        // Log each todo\n        todos.value.forEach(todo => {\n          logToConsole(`${todo.id}\\t${todo.task}${todo.complete ? '\\t(completada)' : ''}`);\n        });\n        \n      } catch (err) {\n        const message = err instanceof Error ? err.message : 'Error desconocido';\n        error.value = message;\n        logToConsole(`Error: ${message}`);\n      } finally {\n        loading.value = false;\n      }\n    };\n\n    const refreshData = async () => {\n      await loadData();\n      showMessage('Datos actualizados correctamente');\n    };\n\n    // Task operations\n    const addTask = async () => {\n      const task = newTaskText.value.trim();\n      if (!task) return;\n      \n      addingTask.value = true;\n      \n      try {\n        const newTodo = await ApiService.createTodo(task);\n        todos.value.push(newTodo);\n        newTaskText.value = '';\n        \n        logToConsole(`Nueva tarea añadida: \"${task}\" con ID: ${newTodo.id}`);\n        showMessage('Tarea añadida correctamente');\n        \n      } catch (err) {\n        const message = err instanceof Error ? err.message : 'Error al añadir tarea';\n        showMessage(message, true);\n        logToConsole(`Error al añadir tarea: ${message}`);\n      } finally {\n        addingTask.value = false;\n      }\n    };\n\n    const toggleComplete = async (id, complete) => {\n      try {\n        const updatedTodo = await ApiService.markTodoComplete(id, complete);\n        \n        const index = todos.value.findIndex(todo => todo.id === id);\n        if (index !== -1) {\n          todos.value[index] = updatedTodo;\n        }\n        \n        const action = complete ? 'completada' : 'marcada como pendiente';\n        logToConsole(`Tarea ${id} ${action}`);\n        showMessage(`Tarea ${action} correctamente`);\n        \n      } catch (err) {\n        const message = err instanceof Error ? err.message : 'Error al actualizar tarea';\n        showMessage(message, true);\n        logToConsole(`Error al actualizar tarea ${id}: ${message}`);\n      }\n    };\n\n    const deleteSingleTodo = async (id) => {\n      deletingTodo.value = id;\n      \n      try {\n        await ApiService.deleteTodo(id);\n        todos.value = todos.value.filter(todo => todo.id !== id);\n        \n        logToConsole(`Tarea ${id} eliminada`);\n        showMessage('Tarea eliminada correctamente');\n        \n      } catch (err) {\n        const message = err instanceof Error ? err.message : 'Error al eliminar tarea';\n        showMessage(message, true);\n        logToConsole(`Error al eliminar tarea ${id}: ${message}`);\n      } finally {\n        deletingTodo.value = null;\n      }\n    };\n\n    const removeCompletedTasks = async () => {\n      if (!hasCompletedTasks.value) return;\n      \n      removingCompleted.value = true;\n      \n      try {\n        await ApiService.deleteCompletedTodos();\n        todos.value = todos.value.filter(todo => !todo.complete);\n        \n        logToConsole('Tareas completadas eliminadas');\n        showMessage('Tareas completadas eliminadas correctamente');\n        \n      } catch (err) {\n        const message = err instanceof Error ? err.message : 'Error al eliminar tareas completadas';\n        showMessage(message, true);\n        logToConsole(`Error al eliminar tareas completadas: ${message}`);\n      } finally {\n        removingCompleted.value = false;\n      }\n    };\n\n    const toggleShowCompleted = () => {\n      showCompleted.value = !showCompleted.value;\n      const action = showCompleted.value ? 'Mostrando' : 'Ocultando';\n      logToConsole(`${action} tareas completadas`);\n    };\n\n    // Watch for changes in filtered todos to update console\n    watch(filteredTodos, (newTodos) => {\n      if (newTodos.length > 0) {\n        logToConsole(`Mostrando ${newTodos.length} tareas`);\n      }\n    }, { deep: true });\n\n    // Initialize app\n    onMounted(() => {\n      logToConsole('Aplicación Vue Todo List iniciada');\n      loadData();\n    });\n\n    return {\n      // State\n      todos,\n      user,\n      loading,\n      error,\n      successMessage,\n      newTaskText,\n      showCompleted,\n      activeTab,\n      consoleLogs,\n      consoleOutput,\n      addingTask,\n      removingCompleted,\n      deletingTodo,\n      \n      // Computed\n      filteredTodos,\n      stats,\n      hasCompletedTasks,\n      \n      // Methods\n      logToConsole,\n      clearConsole,\n      showMessage,\n      loadData,\n      refreshData,\n      addTask,\n      toggleComplete,\n      deleteSingleTodo,\n      removeCompletedTasks,\n      toggleShowCompleted\n    };\n  }\n};\n</script>\n\n<style>\n/* Los estilos ya están incluidos en assets/style.css */\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}