{"ast":null,"code":"import _regenerator from \"C:/Users/alber/OneDrive/Escritorio/App_vue to-do list/vue-todo-app/node_modules/@babel/runtime/helpers/esm/regenerator.js\";\nimport _slicedToArray from \"C:/Users/alber/OneDrive/Escritorio/App_vue to-do list/vue-todo-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _asyncToGenerator from \"C:/Users/alber/OneDrive/Escritorio/App_vue to-do list/vue-todo-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.error.to-string.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.array.find-index.js\";\nimport \"core-js/modules/es.array.for-each.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array.some.js\";\nimport \"core-js/modules/es.date.to-string.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.iterator.for-each.js\";\nimport \"core-js/modules/es.iterator.some.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/es.string.trim.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/web.timers.js\";\nimport { ref, computed, onMounted, nextTick, watch } from 'vue';\nimport { ApiService } from './services/apiService.js';\nexport default {\n  name: 'App',\n  setup: function setup() {\n    // Reactive state\n    var todos = ref([]);\n    var user = ref(null);\n    var loading = ref(false);\n    var error = ref('');\n    var successMessage = ref('');\n    var newTaskText = ref('');\n    var showCompleted = ref(true);\n    var activeTab = ref('app');\n    var consoleLogs = ref([]);\n    var consoleOutput = ref();\n\n    // Action states\n    var addingTask = ref(false);\n    var removingCompleted = ref(false);\n    var deletingTodo = ref(null);\n\n    // Computed properties\n    var filteredTodos = computed(function () {\n      return showCompleted.value ? todos.value : todos.value.filter(function (todo) {\n        return !todo.complete;\n      });\n    });\n    var stats = computed(function () {\n      var total = todos.value.length;\n      var completed = todos.value.filter(function (todo) {\n        return todo.complete;\n      }).length;\n      var pending = total - completed;\n      return {\n        total: total,\n        completed: completed,\n        pending: pending\n      };\n    });\n    var hasCompletedTasks = computed(function () {\n      return todos.value.some(function (todo) {\n        return todo.complete;\n      });\n    });\n\n    // Console logging\n    var logToConsole = function logToConsole(message) {\n      consoleLogs.value.push(\"[\".concat(new Date().toLocaleTimeString(), \"] \").concat(message));\n      nextTick(function () {\n        if (consoleOutput.value) {\n          consoleOutput.value.scrollTop = consoleOutput.value.scrollHeight;\n        }\n      });\n    };\n    var clearConsole = function clearConsole() {\n      consoleLogs.value = [];\n      logToConsole('Consola limpiada');\n    };\n\n    // Message handling\n    var showMessage = function showMessage(message) {\n      var isError = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      if (isError) {\n        error.value = message;\n        successMessage.value = '';\n      } else {\n        successMessage.value = message;\n        error.value = '';\n      }\n      setTimeout(function () {\n        error.value = '';\n        successMessage.value = '';\n      }, 3000);\n    };\n\n    // Data loading\n    var loadData = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee() {\n        var apiHealthy, _yield$Promise$all, _yield$Promise$all2, todosData, usersData, message, _t;\n        return _regenerator().w(function (_context) {\n          while (1) switch (_context.n) {\n            case 0:\n              loading.value = true;\n              error.value = '';\n              _context.p = 1;\n              _context.n = 2;\n              return ApiService.checkApiHealth();\n            case 2:\n              apiHealthy = _context.v;\n              if (apiHealthy) {\n                _context.n = 3;\n                break;\n              }\n              throw new Error('El servidor JSON no está disponible. Asegúrate de ejecutar: npm run server');\n            case 3:\n              _context.n = 4;\n              return Promise.all([ApiService.getTodos(), ApiService.getUsers()]);\n            case 4:\n              _yield$Promise$all = _context.v;\n              _yield$Promise$all2 = _slicedToArray(_yield$Promise$all, 2);\n              todosData = _yield$Promise$all2[0];\n              usersData = _yield$Promise$all2[1];\n              todos.value = todosData;\n              user.value = usersData[0] || {\n                id: 1,\n                name: 'Usuario'\n              };\n              logToConsole(\"\".concat(user.value.name, \"'s Todo List cargada (\").concat(stats.value.pending, \" pendientes)\"));\n              logToConsole(\"Total de tareas: \".concat(stats.value.total));\n\n              // Log each todo\n              todos.value.forEach(function (todo) {\n                logToConsole(\"\".concat(todo.id, \"\\t\").concat(todo.task).concat(todo.complete ? '\\t(completada)' : ''));\n              });\n              _context.n = 6;\n              break;\n            case 5:\n              _context.p = 5;\n              _t = _context.v;\n              message = _t instanceof Error ? _t.message : 'Error desconocido';\n              error.value = message;\n              logToConsole(\"Error: \".concat(message));\n            case 6:\n              _context.p = 6;\n              loading.value = false;\n              return _context.f(6);\n            case 7:\n              return _context.a(2);\n          }\n        }, _callee, null, [[1, 5, 6, 7]]);\n      }));\n      return function loadData() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n    var refreshData = /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee2() {\n        return _regenerator().w(function (_context2) {\n          while (1) switch (_context2.n) {\n            case 0:\n              _context2.n = 1;\n              return loadData();\n            case 1:\n              showMessage('Datos actualizados correctamente');\n            case 2:\n              return _context2.a(2);\n          }\n        }, _callee2);\n      }));\n      return function refreshData() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    // Task operations\n    var addTask = /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee3() {\n        var task, newTodo, message, _t2;\n        return _regenerator().w(function (_context3) {\n          while (1) switch (_context3.n) {\n            case 0:\n              task = newTaskText.value.trim();\n              if (task) {\n                _context3.n = 1;\n                break;\n              }\n              return _context3.a(2);\n            case 1:\n              addingTask.value = true;\n              _context3.p = 2;\n              _context3.n = 3;\n              return ApiService.createTodo(task);\n            case 3:\n              newTodo = _context3.v;\n              todos.value.push(newTodo);\n              newTaskText.value = '';\n              logToConsole(\"Nueva tarea a\\xF1adida: \\\"\".concat(task, \"\\\" con ID: \").concat(newTodo.id));\n              showMessage('Tarea añadida correctamente');\n              _context3.n = 5;\n              break;\n            case 4:\n              _context3.p = 4;\n              _t2 = _context3.v;\n              message = _t2 instanceof Error ? _t2.message : 'Error al añadir tarea';\n              showMessage(message, true);\n              logToConsole(\"Error al a\\xF1adir tarea: \".concat(message));\n            case 5:\n              _context3.p = 5;\n              addingTask.value = false;\n              return _context3.f(5);\n            case 6:\n              return _context3.a(2);\n          }\n        }, _callee3, null, [[2, 4, 5, 6]]);\n      }));\n      return function addTask() {\n        return _ref3.apply(this, arguments);\n      };\n    }();\n    var toggleComplete = /*#__PURE__*/function () {\n      var _ref4 = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee4(id, complete) {\n        var updatedTodo, index, action, message, _t3;\n        return _regenerator().w(function (_context4) {\n          while (1) switch (_context4.n) {\n            case 0:\n              _context4.p = 0;\n              _context4.n = 1;\n              return ApiService.markTodoComplete(id, complete);\n            case 1:\n              updatedTodo = _context4.v;\n              index = todos.value.findIndex(function (todo) {\n                return todo.id === id;\n              });\n              if (index !== -1) {\n                todos.value[index] = updatedTodo;\n              }\n              action = complete ? 'completada' : 'marcada como pendiente';\n              logToConsole(\"Tarea \".concat(id, \" \").concat(action));\n              showMessage(\"Tarea \".concat(action, \" correctamente\"));\n              _context4.n = 3;\n              break;\n            case 2:\n              _context4.p = 2;\n              _t3 = _context4.v;\n              message = _t3 instanceof Error ? _t3.message : 'Error al actualizar tarea';\n              showMessage(message, true);\n              logToConsole(\"Error al actualizar tarea \".concat(id, \": \").concat(message));\n            case 3:\n              return _context4.a(2);\n          }\n        }, _callee4, null, [[0, 2]]);\n      }));\n      return function toggleComplete(_x, _x2) {\n        return _ref4.apply(this, arguments);\n      };\n    }();\n    var deleteSingleTodo = /*#__PURE__*/function () {\n      var _ref5 = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee5(id) {\n        var message, _t4;\n        return _regenerator().w(function (_context5) {\n          while (1) switch (_context5.n) {\n            case 0:\n              deletingTodo.value = id;\n              _context5.p = 1;\n              _context5.n = 2;\n              return ApiService.deleteTodo(id);\n            case 2:\n              todos.value = todos.value.filter(function (todo) {\n                return todo.id !== id;\n              });\n              logToConsole(\"Tarea \".concat(id, \" eliminada\"));\n              showMessage('Tarea eliminada correctamente');\n              _context5.n = 4;\n              break;\n            case 3:\n              _context5.p = 3;\n              _t4 = _context5.v;\n              message = _t4 instanceof Error ? _t4.message : 'Error al eliminar tarea';\n              showMessage(message, true);\n              logToConsole(\"Error al eliminar tarea \".concat(id, \": \").concat(message));\n            case 4:\n              _context5.p = 4;\n              deletingTodo.value = null;\n              return _context5.f(4);\n            case 5:\n              return _context5.a(2);\n          }\n        }, _callee5, null, [[1, 3, 4, 5]]);\n      }));\n      return function deleteSingleTodo(_x3) {\n        return _ref5.apply(this, arguments);\n      };\n    }();\n    var removeCompletedTasks = /*#__PURE__*/function () {\n      var _ref6 = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee6() {\n        var message, _t5;\n        return _regenerator().w(function (_context6) {\n          while (1) switch (_context6.n) {\n            case 0:\n              if (hasCompletedTasks.value) {\n                _context6.n = 1;\n                break;\n              }\n              return _context6.a(2);\n            case 1:\n              removingCompleted.value = true;\n              _context6.p = 2;\n              _context6.n = 3;\n              return ApiService.deleteCompletedTodos();\n            case 3:\n              todos.value = todos.value.filter(function (todo) {\n                return !todo.complete;\n              });\n              logToConsole('Tareas completadas eliminadas');\n              showMessage('Tareas completadas eliminadas correctamente');\n              _context6.n = 5;\n              break;\n            case 4:\n              _context6.p = 4;\n              _t5 = _context6.v;\n              message = _t5 instanceof Error ? _t5.message : 'Error al eliminar tareas completadas';\n              showMessage(message, true);\n              logToConsole(\"Error al eliminar tareas completadas: \".concat(message));\n            case 5:\n              _context6.p = 5;\n              removingCompleted.value = false;\n              return _context6.f(5);\n            case 6:\n              return _context6.a(2);\n          }\n        }, _callee6, null, [[2, 4, 5, 6]]);\n      }));\n      return function removeCompletedTasks() {\n        return _ref6.apply(this, arguments);\n      };\n    }();\n    var toggleShowCompleted = function toggleShowCompleted() {\n      showCompleted.value = !showCompleted.value;\n      var action = showCompleted.value ? 'Mostrando' : 'Ocultando';\n      logToConsole(\"\".concat(action, \" tareas completadas\"));\n    };\n\n    // Watch for changes in filtered todos to update console\n    watch(filteredTodos, function (newTodos) {\n      if (newTodos.length > 0) {\n        logToConsole(\"Mostrando \".concat(newTodos.length, \" tareas\"));\n      }\n    }, {\n      deep: true\n    });\n\n    // Initialize app\n    onMounted(function () {\n      logToConsole('Aplicación Vue Todo List iniciada');\n      loadData();\n    });\n    return {\n      // State\n      todos: todos,\n      user: user,\n      loading: loading,\n      error: error,\n      successMessage: successMessage,\n      newTaskText: newTaskText,\n      showCompleted: showCompleted,\n      activeTab: activeTab,\n      consoleLogs: consoleLogs,\n      consoleOutput: consoleOutput,\n      addingTask: addingTask,\n      removingCompleted: removingCompleted,\n      deletingTodo: deletingTodo,\n      // Computed\n      filteredTodos: filteredTodos,\n      stats: stats,\n      hasCompletedTasks: hasCompletedTasks,\n      // Methods\n      logToConsole: logToConsole,\n      clearConsole: clearConsole,\n      showMessage: showMessage,\n      loadData: loadData,\n      refreshData: refreshData,\n      addTask: addTask,\n      toggleComplete: toggleComplete,\n      deleteSingleTodo: deleteSingleTodo,\n      removeCompletedTasks: removeCompletedTasks,\n      toggleShowCompleted: toggleShowCompleted\n    };\n  }\n};","map":{"version":3,"names":["ref","computed","onMounted","nextTick","watch","ApiService","name","setup","todos","user","loading","error","successMessage","newTaskText","showCompleted","activeTab","consoleLogs","consoleOutput","addingTask","removingCompleted","deletingTodo","filteredTodos","value","filter","todo","complete","stats","total","length","completed","pending","hasCompletedTasks","some","logToConsole","message","push","concat","Date","toLocaleTimeString","scrollTop","scrollHeight","clearConsole","showMessage","isError","arguments","undefined","setTimeout","loadData","_ref","_asyncToGenerator","_regenerator","m","_callee","apiHealthy","_yield$Promise$all","_yield$Promise$all2","todosData","usersData","_t","w","_context","n","p","checkApiHealth","v","Error","Promise","all","getTodos","getUsers","_slicedToArray","id","forEach","task","f","a","apply","refreshData","_ref2","_callee2","_context2","addTask","_ref3","_callee3","newTodo","_t2","_context3","trim","createTodo","toggleComplete","_ref4","_callee4","updatedTodo","index","action","_t3","_context4","markTodoComplete","findIndex","_x","_x2","deleteSingleTodo","_ref5","_callee5","_t4","_context5","deleteTodo","_x3","removeCompletedTasks","_ref6","_callee6","_t5","_context6","deleteCompletedTodos","toggleShowCompleted","newTodos","deep"],"sources":["C:\\Users\\alber\\OneDrive\\Escritorio\\App_vue to-do list\\vue-todo-app\\src\\App.vue"],"sourcesContent":["<template>\n  <div class=\"container\">\n    <h1>\n      {{ user?.name || 'Usuario' }}'s Todo List\n      <span class=\"counter\">{{ stats.pending }} pendientes</span>\n    </h1>\n\n    <!-- Loading state -->\n    <div v-if=\"loading\" class=\"loading\">\n      <p>Cargando...</p>\n    </div>\n\n    <!-- Error message -->\n    <div v-if=\"error\" class=\"message error\">\n      {{ error }}\n      <button @click=\"loadData\" class=\"btn btn-primary\" style=\"margin-left: 10px;\">\n        Reintentar\n      </button>\n    </div>\n\n    <!-- Success message -->\n    <div v-if=\"successMessage\" class=\"message success\">\n      {{ successMessage }}\n    </div>\n\n    <template v-if=\"!loading && !error\">\n      <!-- Stats -->\n      <div class=\"stats\">\n        <span>Total: {{ stats.total }}</span>\n        <span>Completadas: {{ stats.completed }}</span>\n        <span>Pendientes: {{ stats.pending }}</span>\n      </div>\n\n      <!-- Tabs -->\n      <div class=\"tabs\">\n        <div \n          class=\"tab\" \n          :class=\"{ active: activeTab === 'app' }\"\n          @click=\"activeTab = 'app'\"\n        >\n          Aplicación\n        </div>\n        <div \n          class=\"tab\" \n          :class=\"{ active: activeTab === 'console' }\"\n          @click=\"activeTab = 'console'\"\n        >\n          Consola\n        </div>\n      </div>\n\n      <!-- App Tab -->\n      <div v-if=\"activeTab === 'app'\" class=\"tab-content active\">\n        <!-- Add new task -->\n        <div class=\"new-task\">\n          <input\n            v-model=\"newTaskText\"\n            @keyup.enter=\"addTask\"\n            :disabled=\"addingTask\"\n            type=\"text\"\n            placeholder=\"Añadir nueva tarea...\"\n          />\n          <button \n            @click=\"addTask\" \n            :disabled=\"!newTaskText.trim() || addingTask\"\n          >\n            {{ addingTask ? 'Añadiendo...' : 'Añadir' }}\n          </button>\n        </div>\n\n        <!-- Task list -->\n        <ul class=\"task-list\" v-if=\"filteredTodos.length > 0\">\n          <li\n            v-for=\"todo in filteredTodos\"\n            :key=\"todo.id\"\n            class=\"task-item\"\n            :class=\"{ completed: todo.complete }\"\n          >\n            <input\n              type=\"checkbox\"\n              class=\"task-checkbox\"\n              :checked=\"todo.complete\"\n              @change=\"toggleComplete(todo.id, !todo.complete)\"\n            />\n            <span class=\"task-id\">{{ todo.id }}</span>\n            <span class=\"task-text\">{{ todo.task }}</span>\n            <div class=\"task-actions\">\n              <button\n                @click=\"deleteSingleTodo(todo.id)\"\n                class=\"btn btn-danger\"\n                :disabled=\"deletingTodo === todo.id\"\n              >\n                {{ deletingTodo === todo.id ? '...' : 'Eliminar' }}\n              </button>\n            </div>\n          </li>\n        </ul>\n\n        <!-- Empty state -->\n        <div v-else class=\"empty-state\">\n          <h3>No hay tareas</h3>\n          <p>{{ showCompleted ? 'No tienes tareas aún' : 'No hay tareas pendientes' }}</p>\n        </div>\n\n        <!-- Controls -->\n        <div class=\"controls\">\n          <button\n            @click=\"removeCompletedTasks\"\n            :disabled=\"!hasCompletedTasks || removingCompleted\"\n            class=\"btn btn-danger\"\n          >\n            {{ removingCompleted ? 'Eliminando...' : 'Eliminar completadas' }}\n          </button>\n          <button\n            @click=\"toggleShowCompleted\"\n            class=\"btn btn-primary\"\n          >\n            {{ showCompleted ? 'Ocultar completadas' : 'Mostrar completadas' }}\n          </button>\n          <button\n            @click=\"refreshData\"\n            :disabled=\"loading\"\n            class=\"btn btn-secondary\"\n          >\n            {{ loading ? 'Actualizando...' : 'Actualizar' }}\n          </button>\n        </div>\n      </div>\n\n      <!-- Console Tab -->\n      <div v-if=\"activeTab === 'console'\" class=\"tab-content active\">\n        <div class=\"console-output\" ref=\"consoleOutput\">\n          <div v-for=\"(log, index) in consoleLogs\" :key=\"index\" class=\"console-line\">\n            {{ log }}\n          </div>\n          <div v-if=\"consoleLogs.length === 0\" class=\"console-line\">\n            Consola vacía. Las acciones aparecerán aquí.\n          </div>\n        </div>\n        <div style=\"margin-top: 15px; text-align: center;\">\n          <button @click=\"clearConsole\" class=\"btn btn-secondary\">\n            Limpiar Consola\n          </button>\n        </div>\n      </div>\n    </template>\n  </div>\n</template>\n\n<script>\nimport { ref, computed, onMounted, nextTick, watch } from 'vue';\nimport { ApiService } from './services/apiService.js';\n\nexport default {\n  name: 'App',\n  setup() {\n    // Reactive state\n    const todos = ref([]);\n    const user = ref(null);\n    const loading = ref(false);\n    const error = ref('');\n    const successMessage = ref('');\n    const newTaskText = ref('');\n    const showCompleted = ref(true);\n    const activeTab = ref('app');\n    const consoleLogs = ref([]);\n    const consoleOutput = ref();\n\n    // Action states\n    const addingTask = ref(false);\n    const removingCompleted = ref(false);\n    const deletingTodo = ref(null);\n\n    // Computed properties\n    const filteredTodos = computed(() => {\n      return showCompleted.value \n        ? todos.value \n        : todos.value.filter(todo => !todo.complete);\n    });\n\n    const stats = computed(() => {\n      const total = todos.value.length;\n      const completed = todos.value.filter(todo => todo.complete).length;\n      const pending = total - completed;\n      \n      return { total, completed, pending };\n    });\n\n    const hasCompletedTasks = computed(() => {\n      return todos.value.some(todo => todo.complete);\n    });\n\n    // Console logging\n    const logToConsole = (message) => {\n      consoleLogs.value.push(`[${new Date().toLocaleTimeString()}] ${message}`);\n      nextTick(() => {\n        if (consoleOutput.value) {\n          consoleOutput.value.scrollTop = consoleOutput.value.scrollHeight;\n        }\n      });\n    };\n\n    const clearConsole = () => {\n      consoleLogs.value = [];\n      logToConsole('Consola limpiada');\n    };\n\n    // Message handling\n    const showMessage = (message, isError = false) => {\n      if (isError) {\n        error.value = message;\n        successMessage.value = '';\n      } else {\n        successMessage.value = message;\n        error.value = '';\n      }\n      \n      setTimeout(() => {\n        error.value = '';\n        successMessage.value = '';\n      }, 3000);\n    };\n\n    // Data loading\n    const loadData = async () => {\n      loading.value = true;\n      error.value = '';\n      \n      try {\n        // Check API health first\n        const apiHealthy = await ApiService.checkApiHealth();\n        if (!apiHealthy) {\n          throw new Error('El servidor JSON no está disponible. Asegúrate de ejecutar: npm run server');\n        }\n\n        // Load todos and user\n        const [todosData, usersData] = await Promise.all([\n          ApiService.getTodos(),\n          ApiService.getUsers()\n        ]);\n        \n        todos.value = todosData;\n        user.value = usersData[0] || { id: 1, name: 'Usuario' };\n        \n        logToConsole(`${user.value.name}'s Todo List cargada (${stats.value.pending} pendientes)`);\n        logToConsole(`Total de tareas: ${stats.value.total}`);\n        \n        // Log each todo\n        todos.value.forEach(todo => {\n          logToConsole(`${todo.id}\\t${todo.task}${todo.complete ? '\\t(completada)' : ''}`);\n        });\n        \n      } catch (err) {\n        const message = err instanceof Error ? err.message : 'Error desconocido';\n        error.value = message;\n        logToConsole(`Error: ${message}`);\n      } finally {\n        loading.value = false;\n      }\n    };\n\n    const refreshData = async () => {\n      await loadData();\n      showMessage('Datos actualizados correctamente');\n    };\n\n    // Task operations\n    const addTask = async () => {\n      const task = newTaskText.value.trim();\n      if (!task) return;\n      \n      addingTask.value = true;\n      \n      try {\n        const newTodo = await ApiService.createTodo(task);\n        todos.value.push(newTodo);\n        newTaskText.value = '';\n        \n        logToConsole(`Nueva tarea añadida: \"${task}\" con ID: ${newTodo.id}`);\n        showMessage('Tarea añadida correctamente');\n        \n      } catch (err) {\n        const message = err instanceof Error ? err.message : 'Error al añadir tarea';\n        showMessage(message, true);\n        logToConsole(`Error al añadir tarea: ${message}`);\n      } finally {\n        addingTask.value = false;\n      }\n    };\n\n    const toggleComplete = async (id, complete) => {\n      try {\n        const updatedTodo = await ApiService.markTodoComplete(id, complete);\n        \n        const index = todos.value.findIndex(todo => todo.id === id);\n        if (index !== -1) {\n          todos.value[index] = updatedTodo;\n        }\n        \n        const action = complete ? 'completada' : 'marcada como pendiente';\n        logToConsole(`Tarea ${id} ${action}`);\n        showMessage(`Tarea ${action} correctamente`);\n        \n      } catch (err) {\n        const message = err instanceof Error ? err.message : 'Error al actualizar tarea';\n        showMessage(message, true);\n        logToConsole(`Error al actualizar tarea ${id}: ${message}`);\n      }\n    };\n\n    const deleteSingleTodo = async (id) => {\n      deletingTodo.value = id;\n      \n      try {\n        await ApiService.deleteTodo(id);\n        todos.value = todos.value.filter(todo => todo.id !== id);\n        \n        logToConsole(`Tarea ${id} eliminada`);\n        showMessage('Tarea eliminada correctamente');\n        \n      } catch (err) {\n        const message = err instanceof Error ? err.message : 'Error al eliminar tarea';\n        showMessage(message, true);\n        logToConsole(`Error al eliminar tarea ${id}: ${message}`);\n      } finally {\n        deletingTodo.value = null;\n      }\n    };\n\n    const removeCompletedTasks = async () => {\n      if (!hasCompletedTasks.value) return;\n      \n      removingCompleted.value = true;\n      \n      try {\n        await ApiService.deleteCompletedTodos();\n        todos.value = todos.value.filter(todo => !todo.complete);\n        \n        logToConsole('Tareas completadas eliminadas');\n        showMessage('Tareas completadas eliminadas correctamente');\n        \n      } catch (err) {\n        const message = err instanceof Error ? err.message : 'Error al eliminar tareas completadas';\n        showMessage(message, true);\n        logToConsole(`Error al eliminar tareas completadas: ${message}`);\n      } finally {\n        removingCompleted.value = false;\n      }\n    };\n\n    const toggleShowCompleted = () => {\n      showCompleted.value = !showCompleted.value;\n      const action = showCompleted.value ? 'Mostrando' : 'Ocultando';\n      logToConsole(`${action} tareas completadas`);\n    };\n\n    // Watch for changes in filtered todos to update console\n    watch(filteredTodos, (newTodos) => {\n      if (newTodos.length > 0) {\n        logToConsole(`Mostrando ${newTodos.length} tareas`);\n      }\n    }, { deep: true });\n\n    // Initialize app\n    onMounted(() => {\n      logToConsole('Aplicación Vue Todo List iniciada');\n      loadData();\n    });\n\n    return {\n      // State\n      todos,\n      user,\n      loading,\n      error,\n      successMessage,\n      newTaskText,\n      showCompleted,\n      activeTab,\n      consoleLogs,\n      consoleOutput,\n      addingTask,\n      removingCompleted,\n      deletingTodo,\n      \n      // Computed\n      filteredTodos,\n      stats,\n      hasCompletedTasks,\n      \n      // Methods\n      logToConsole,\n      clearConsole,\n      showMessage,\n      loadData,\n      refreshData,\n      addTask,\n      toggleComplete,\n      deleteSingleTodo,\n      removeCompletedTasks,\n      toggleShowCompleted\n    };\n  }\n};\n</script>\n\n<style>\n/* Los estilos ya están incluidos en assets/style.css */\n</style>"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAsJA,SAASA,GAAG,EAAEC,QAAQ,EAAEC,SAAS,EAAEC,QAAQ,EAAEC,KAAI,QAAS,KAAK;AAC/D,SAASC,UAAS,QAAS,0BAA0B;AAErD,eAAe;EACbC,IAAI,EAAE,KAAK;EACXC,KAAK,WAALA,KAAKA,CAAA,EAAG;IACN;IACA,IAAMC,KAAI,GAAIR,GAAG,CAAC,EAAE,CAAC;IACrB,IAAMS,IAAG,GAAIT,GAAG,CAAC,IAAI,CAAC;IACtB,IAAMU,OAAM,GAAIV,GAAG,CAAC,KAAK,CAAC;IAC1B,IAAMW,KAAI,GAAIX,GAAG,CAAC,EAAE,CAAC;IACrB,IAAMY,cAAa,GAAIZ,GAAG,CAAC,EAAE,CAAC;IAC9B,IAAMa,WAAU,GAAIb,GAAG,CAAC,EAAE,CAAC;IAC3B,IAAMc,aAAY,GAAId,GAAG,CAAC,IAAI,CAAC;IAC/B,IAAMe,SAAQ,GAAIf,GAAG,CAAC,KAAK,CAAC;IAC5B,IAAMgB,WAAU,GAAIhB,GAAG,CAAC,EAAE,CAAC;IAC3B,IAAMiB,aAAY,GAAIjB,GAAG,CAAC,CAAC;;IAE3B;IACA,IAAMkB,UAAS,GAAIlB,GAAG,CAAC,KAAK,CAAC;IAC7B,IAAMmB,iBAAgB,GAAInB,GAAG,CAAC,KAAK,CAAC;IACpC,IAAMoB,YAAW,GAAIpB,GAAG,CAAC,IAAI,CAAC;;IAE9B;IACA,IAAMqB,aAAY,GAAIpB,QAAQ,CAAC,YAAM;MACnC,OAAOa,aAAa,CAACQ,KAAI,GACrBd,KAAK,CAACc,KAAI,GACVd,KAAK,CAACc,KAAK,CAACC,MAAM,CAAC,UAAAC,IAAG;QAAA,OAAK,CAACA,IAAI,CAACC,QAAQ;MAAA,EAAC;IAChD,CAAC,CAAC;IAEF,IAAMC,KAAI,GAAIzB,QAAQ,CAAC,YAAM;MAC3B,IAAM0B,KAAI,GAAInB,KAAK,CAACc,KAAK,CAACM,MAAM;MAChC,IAAMC,SAAQ,GAAIrB,KAAK,CAACc,KAAK,CAACC,MAAM,CAAC,UAAAC,IAAG;QAAA,OAAKA,IAAI,CAACC,QAAQ;MAAA,EAAC,CAACG,MAAM;MAClE,IAAME,OAAM,GAAIH,KAAI,GAAIE,SAAS;MAEjC,OAAO;QAAEF,KAAK,EAALA,KAAK;QAAEE,SAAS,EAATA,SAAS;QAAEC,OAAM,EAANA;MAAQ,CAAC;IACtC,CAAC,CAAC;IAEF,IAAMC,iBAAgB,GAAI9B,QAAQ,CAAC,YAAM;MACvC,OAAOO,KAAK,CAACc,KAAK,CAACU,IAAI,CAAC,UAAAR,IAAG;QAAA,OAAKA,IAAI,CAACC,QAAQ;MAAA,EAAC;IAChD,CAAC,CAAC;;IAEF;IACA,IAAMQ,YAAW,GAAI,SAAfA,YAAWA,CAAKC,OAAO,EAAK;MAChClB,WAAW,CAACM,KAAK,CAACa,IAAI,KAAAC,MAAA,CAAK,IAAIC,IAAI,CAAC,CAAC,CAACC,kBAAkB,CAAC,CAAC,QAAAF,MAAA,CAAKF,OAAO,CAAE,CAAC;MACzE/B,QAAQ,CAAC,YAAM;QACb,IAAIc,aAAa,CAACK,KAAK,EAAE;UACvBL,aAAa,CAACK,KAAK,CAACiB,SAAQ,GAAItB,aAAa,CAACK,KAAK,CAACkB,YAAY;QAClE;MACF,CAAC,CAAC;IACJ,CAAC;IAED,IAAMC,YAAW,GAAI,SAAfA,YAAWA,CAAA,EAAU;MACzBzB,WAAW,CAACM,KAAI,GAAI,EAAE;MACtBW,YAAY,CAAC,kBAAkB,CAAC;IAClC,CAAC;;IAED;IACA,IAAMS,WAAU,GAAI,SAAdA,WAAUA,CAAKR,OAAO,EAAsB;MAAA,IAApBS,OAAM,GAAAC,SAAA,CAAAhB,MAAA,QAAAgB,SAAA,QAAAC,SAAA,GAAAD,SAAA,MAAI,KAAK;MAC3C,IAAID,OAAO,EAAE;QACXhC,KAAK,CAACW,KAAI,GAAIY,OAAO;QACrBtB,cAAc,CAACU,KAAI,GAAI,EAAE;MAC3B,OAAO;QACLV,cAAc,CAACU,KAAI,GAAIY,OAAO;QAC9BvB,KAAK,CAACW,KAAI,GAAI,EAAE;MAClB;MAEAwB,UAAU,CAAC,YAAM;QACfnC,KAAK,CAACW,KAAI,GAAI,EAAE;QAChBV,cAAc,CAACU,KAAI,GAAI,EAAE;MAC3B,CAAC,EAAE,IAAI,CAAC;IACV,CAAC;;IAED;IACA,IAAMyB,QAAO;MAAA,IAAAC,IAAA,GAAAC,iBAAA,cAAAC,YAAA,GAAAC,CAAA,CAAI,SAAAC,QAAA;QAAA,IAAAC,UAAA,EAAAC,kBAAA,EAAAC,mBAAA,EAAAC,SAAA,EAAAC,SAAA,EAAAvB,OAAA,EAAAwB,EAAA;QAAA,OAAAR,YAAA,GAAAS,CAAA,WAAAC,QAAA;UAAA,kBAAAA,QAAA,CAAAC,CAAA;YAAA;cACfnD,OAAO,CAACY,KAAI,GAAI,IAAI;cACpBX,KAAK,CAACW,KAAI,GAAI,EAAE;cAAAsC,QAAA,CAAAE,CAAA;cAAAF,QAAA,CAAAC,CAAA;cAAA,OAIWxD,UAAU,CAAC0D,cAAc,CAAC,CAAC;YAAA;cAA9CV,UAAS,GAAAO,QAAA,CAAAI,CAAA;cAAA,IACVX,UAAU;gBAAAO,QAAA,CAAAC,CAAA;gBAAA;cAAA;cAAA,MACP,IAAII,KAAK,CAAC,4EAA4E,CAAC;YAAA;cAAAL,QAAA,CAAAC,CAAA;cAAA,OAI1DK,OAAO,CAACC,GAAG,CAAC,CAC/C9D,UAAU,CAAC+D,QAAQ,CAAC,CAAC,EACrB/D,UAAU,CAACgE,QAAQ,CAAC,EACrB,CAAC;YAAA;cAAAf,kBAAA,GAAAM,QAAA,CAAAI,CAAA;cAAAT,mBAAA,GAAAe,cAAA,CAAAhB,kBAAA;cAHKE,SAAS,GAAAD,mBAAA;cAAEE,SAAS,GAAAF,mBAAA;cAK3B/C,KAAK,CAACc,KAAI,GAAIkC,SAAS;cACvB/C,IAAI,CAACa,KAAI,GAAImC,SAAS,CAAC,CAAC,KAAK;gBAAEc,EAAE,EAAE,CAAC;gBAAEjE,IAAI,EAAE;cAAU,CAAC;cAEvD2B,YAAY,IAAAG,MAAA,CAAI3B,IAAI,CAACa,KAAK,CAAChB,IAAI,4BAAA8B,MAAA,CAAyBV,KAAK,CAACJ,KAAK,CAACQ,OAAO,iBAAc,CAAC;cAC1FG,YAAY,qBAAAG,MAAA,CAAqBV,KAAK,CAACJ,KAAK,CAACK,KAAK,CAAE,CAAC;;cAErD;cACAnB,KAAK,CAACc,KAAK,CAACkD,OAAO,CAAC,UAAAhD,IAAG,EAAK;gBAC1BS,YAAY,IAAAG,MAAA,CAAIZ,IAAI,CAAC+C,EAAE,QAAAnC,MAAA,CAAKZ,IAAI,CAACiD,IAAI,EAAArC,MAAA,CAAGZ,IAAI,CAACC,QAAO,GAAI,gBAAe,GAAI,EAAE,CAAE,CAAC;cAClF,CAAC,CAAC;cAAAmC,QAAA,CAAAC,CAAA;cAAA;YAAA;cAAAD,QAAA,CAAAE,CAAA;cAAAJ,EAAA,GAAAE,QAAA,CAAAI,CAAA;cAGI9B,OAAM,GAAIwB,EAAA,YAAeO,KAAI,GAAIP,EAAA,CAAIxB,OAAM,GAAI,mBAAmB;cACxEvB,KAAK,CAACW,KAAI,GAAIY,OAAO;cACrBD,YAAY,WAAAG,MAAA,CAAWF,OAAO,CAAE,CAAC;YAAA;cAAA0B,QAAA,CAAAE,CAAA;cAEjCpD,OAAO,CAACY,KAAI,GAAI,KAAK;cAAA,OAAAsC,QAAA,CAAAc,CAAA;YAAA;cAAA,OAAAd,QAAA,CAAAe,CAAA;UAAA;QAAA,GAAAvB,OAAA;MAAA,CAExB;MAAA,gBAnCKL,QAAOA,CAAA;QAAA,OAAAC,IAAA,CAAA4B,KAAA,OAAAhC,SAAA;MAAA;IAAA,GAmCZ;IAED,IAAMiC,WAAU;MAAA,IAAAC,KAAA,GAAA7B,iBAAA,cAAAC,YAAA,GAAAC,CAAA,CAAI,SAAA4B,SAAA;QAAA,OAAA7B,YAAA,GAAAS,CAAA,WAAAqB,SAAA;UAAA,kBAAAA,SAAA,CAAAnB,CAAA;YAAA;cAAAmB,SAAA,CAAAnB,CAAA;cAAA,OACZd,QAAQ,CAAC,CAAC;YAAA;cAChBL,WAAW,CAAC,kCAAkC,CAAC;YAAA;cAAA,OAAAsC,SAAA,CAAAL,CAAA;UAAA;QAAA,GAAAI,QAAA;MAAA,CAChD;MAAA,gBAHKF,WAAUA,CAAA;QAAA,OAAAC,KAAA,CAAAF,KAAA,OAAAhC,SAAA;MAAA;IAAA,GAGf;;IAED;IACA,IAAMqC,OAAM;MAAA,IAAAC,KAAA,GAAAjC,iBAAA,cAAAC,YAAA,GAAAC,CAAA,CAAI,SAAAgC,SAAA;QAAA,IAAAV,IAAA,EAAAW,OAAA,EAAAlD,OAAA,EAAAmD,GAAA;QAAA,OAAAnC,YAAA,GAAAS,CAAA,WAAA2B,SAAA;UAAA,kBAAAA,SAAA,CAAAzB,CAAA;YAAA;cACRY,IAAG,GAAI5D,WAAW,CAACS,KAAK,CAACiE,IAAI,CAAC,CAAC;cAAA,IAChCd,IAAI;gBAAAa,SAAA,CAAAzB,CAAA;gBAAA;cAAA;cAAA,OAAAyB,SAAA,CAAAX,CAAA;YAAA;cAETzD,UAAU,CAACI,KAAI,GAAI,IAAI;cAAAgE,SAAA,CAAAxB,CAAA;cAAAwB,SAAA,CAAAzB,CAAA;cAAA,OAGCxD,UAAU,CAACmF,UAAU,CAACf,IAAI,CAAC;YAAA;cAA3CW,OAAM,GAAAE,SAAA,CAAAtB,CAAA;cACZxD,KAAK,CAACc,KAAK,CAACa,IAAI,CAACiD,OAAO,CAAC;cACzBvE,WAAW,CAACS,KAAI,GAAI,EAAE;cAEtBW,YAAY,8BAAAG,MAAA,CAA0BqC,IAAI,iBAAArC,MAAA,CAAagD,OAAO,CAACb,EAAE,CAAE,CAAC;cACpE7B,WAAW,CAAC,6BAA6B,CAAC;cAAA4C,SAAA,CAAAzB,CAAA;cAAA;YAAA;cAAAyB,SAAA,CAAAxB,CAAA;cAAAuB,GAAA,GAAAC,SAAA,CAAAtB,CAAA;cAGpC9B,OAAM,GAAImD,GAAA,YAAepB,KAAI,GAAIoB,GAAA,CAAInD,OAAM,GAAI,uBAAuB;cAC5EQ,WAAW,CAACR,OAAO,EAAE,IAAI,CAAC;cAC1BD,YAAY,8BAAAG,MAAA,CAA2BF,OAAO,CAAE,CAAC;YAAA;cAAAoD,SAAA,CAAAxB,CAAA;cAEjD5C,UAAU,CAACI,KAAI,GAAI,KAAK;cAAA,OAAAgE,SAAA,CAAAZ,CAAA;YAAA;cAAA,OAAAY,SAAA,CAAAX,CAAA;UAAA;QAAA,GAAAQ,QAAA;MAAA,CAE3B;MAAA,gBArBKF,OAAMA,CAAA;QAAA,OAAAC,KAAA,CAAAN,KAAA,OAAAhC,SAAA;MAAA;IAAA,GAqBX;IAED,IAAM6C,cAAa;MAAA,IAAAC,KAAA,GAAAzC,iBAAA,cAAAC,YAAA,GAAAC,CAAA,CAAI,SAAAwC,SAAOpB,EAAE,EAAE9C,QAAQ;QAAA,IAAAmE,WAAA,EAAAC,KAAA,EAAAC,MAAA,EAAA5D,OAAA,EAAA6D,GAAA;QAAA,OAAA7C,YAAA,GAAAS,CAAA,WAAAqC,SAAA;UAAA,kBAAAA,SAAA,CAAAnC,CAAA;YAAA;cAAAmC,SAAA,CAAAlC,CAAA;cAAAkC,SAAA,CAAAnC,CAAA;cAAA,OAEZxD,UAAU,CAAC4F,gBAAgB,CAAC1B,EAAE,EAAE9C,QAAQ,CAAC;YAAA;cAA7DmE,WAAU,GAAAI,SAAA,CAAAhC,CAAA;cAEV6B,KAAI,GAAIrF,KAAK,CAACc,KAAK,CAAC4E,SAAS,CAAC,UAAA1E,IAAG;gBAAA,OAAKA,IAAI,CAAC+C,EAAC,KAAMA,EAAE;cAAA,EAAC;cAC3D,IAAIsB,KAAI,KAAM,CAAC,CAAC,EAAE;gBAChBrF,KAAK,CAACc,KAAK,CAACuE,KAAK,IAAID,WAAW;cAClC;cAEME,MAAK,GAAIrE,QAAO,GAAI,YAAW,GAAI,wBAAwB;cACjEQ,YAAY,UAAAG,MAAA,CAAUmC,EAAE,OAAAnC,MAAA,CAAI0D,MAAM,CAAE,CAAC;cACrCpD,WAAW,UAAAN,MAAA,CAAU0D,MAAM,mBAAgB,CAAC;cAAAE,SAAA,CAAAnC,CAAA;cAAA;YAAA;cAAAmC,SAAA,CAAAlC,CAAA;cAAAiC,GAAA,GAAAC,SAAA,CAAAhC,CAAA;cAGtC9B,OAAM,GAAI6D,GAAA,YAAe9B,KAAI,GAAI8B,GAAA,CAAI7D,OAAM,GAAI,2BAA2B;cAChFQ,WAAW,CAACR,OAAO,EAAE,IAAI,CAAC;cAC1BD,YAAY,8BAAAG,MAAA,CAA8BmC,EAAE,QAAAnC,MAAA,CAAKF,OAAO,CAAE,CAAC;YAAA;cAAA,OAAA8D,SAAA,CAAArB,CAAA;UAAA;QAAA,GAAAgB,QAAA;MAAA,CAE9D;MAAA,gBAlBKF,cAAaA,CAAAU,EAAA,EAAAC,GAAA;QAAA,OAAAV,KAAA,CAAAd,KAAA,OAAAhC,SAAA;MAAA;IAAA,GAkBlB;IAED,IAAMyD,gBAAe;MAAA,IAAAC,KAAA,GAAArD,iBAAA,cAAAC,YAAA,GAAAC,CAAA,CAAI,SAAAoD,SAAOhC,EAAE;QAAA,IAAArC,OAAA,EAAAsE,GAAA;QAAA,OAAAtD,YAAA,GAAAS,CAAA,WAAA8C,SAAA;UAAA,kBAAAA,SAAA,CAAA5C,CAAA;YAAA;cAChCzC,YAAY,CAACE,KAAI,GAAIiD,EAAE;cAAAkC,SAAA,CAAA3C,CAAA;cAAA2C,SAAA,CAAA5C,CAAA;cAAA,OAGfxD,UAAU,CAACqG,UAAU,CAACnC,EAAE,CAAC;YAAA;cAC/B/D,KAAK,CAACc,KAAI,GAAId,KAAK,CAACc,KAAK,CAACC,MAAM,CAAC,UAAAC,IAAG;gBAAA,OAAKA,IAAI,CAAC+C,EAAC,KAAMA,EAAE;cAAA,EAAC;cAExDtC,YAAY,UAAAG,MAAA,CAAUmC,EAAE,eAAY,CAAC;cACrC7B,WAAW,CAAC,+BAA+B,CAAC;cAAA+D,SAAA,CAAA5C,CAAA;cAAA;YAAA;cAAA4C,SAAA,CAAA3C,CAAA;cAAA0C,GAAA,GAAAC,SAAA,CAAAzC,CAAA;cAGtC9B,OAAM,GAAIsE,GAAA,YAAevC,KAAI,GAAIuC,GAAA,CAAItE,OAAM,GAAI,yBAAyB;cAC9EQ,WAAW,CAACR,OAAO,EAAE,IAAI,CAAC;cAC1BD,YAAY,4BAAAG,MAAA,CAA4BmC,EAAE,QAAAnC,MAAA,CAAKF,OAAO,CAAE,CAAC;YAAA;cAAAuE,SAAA,CAAA3C,CAAA;cAEzD1C,YAAY,CAACE,KAAI,GAAI,IAAI;cAAA,OAAAmF,SAAA,CAAA/B,CAAA;YAAA;cAAA,OAAA+B,SAAA,CAAA9B,CAAA;UAAA;QAAA,GAAA4B,QAAA;MAAA,CAE5B;MAAA,gBAjBKF,gBAAeA,CAAAM,GAAA;QAAA,OAAAL,KAAA,CAAA1B,KAAA,OAAAhC,SAAA;MAAA;IAAA,GAiBpB;IAED,IAAMgE,oBAAmB;MAAA,IAAAC,KAAA,GAAA5D,iBAAA,cAAAC,YAAA,GAAAC,CAAA,CAAI,SAAA2D,SAAA;QAAA,IAAA5E,OAAA,EAAA6E,GAAA;QAAA,OAAA7D,YAAA,GAAAS,CAAA,WAAAqD,SAAA;UAAA,kBAAAA,SAAA,CAAAnD,CAAA;YAAA;cAAA,IACtB9B,iBAAiB,CAACT,KAAK;gBAAA0F,SAAA,CAAAnD,CAAA;gBAAA;cAAA;cAAA,OAAAmD,SAAA,CAAArC,CAAA;YAAA;cAE5BxD,iBAAiB,CAACG,KAAI,GAAI,IAAI;cAAA0F,SAAA,CAAAlD,CAAA;cAAAkD,SAAA,CAAAnD,CAAA;cAAA,OAGtBxD,UAAU,CAAC4G,oBAAoB,CAAC,CAAC;YAAA;cACvCzG,KAAK,CAACc,KAAI,GAAId,KAAK,CAACc,KAAK,CAACC,MAAM,CAAC,UAAAC,IAAG;gBAAA,OAAK,CAACA,IAAI,CAACC,QAAQ;cAAA,EAAC;cAExDQ,YAAY,CAAC,+BAA+B,CAAC;cAC7CS,WAAW,CAAC,6CAA6C,CAAC;cAAAsE,SAAA,CAAAnD,CAAA;cAAA;YAAA;cAAAmD,SAAA,CAAAlD,CAAA;cAAAiD,GAAA,GAAAC,SAAA,CAAAhD,CAAA;cAGpD9B,OAAM,GAAI6E,GAAA,YAAe9C,KAAI,GAAI8C,GAAA,CAAI7E,OAAM,GAAI,sCAAsC;cAC3FQ,WAAW,CAACR,OAAO,EAAE,IAAI,CAAC;cAC1BD,YAAY,0CAAAG,MAAA,CAA0CF,OAAO,CAAE,CAAC;YAAA;cAAA8E,SAAA,CAAAlD,CAAA;cAEhE3C,iBAAiB,CAACG,KAAI,GAAI,KAAK;cAAA,OAAA0F,SAAA,CAAAtC,CAAA;YAAA;cAAA,OAAAsC,SAAA,CAAArC,CAAA;UAAA;QAAA,GAAAmC,QAAA;MAAA,CAElC;MAAA,gBAnBKF,oBAAmBA,CAAA;QAAA,OAAAC,KAAA,CAAAjC,KAAA,OAAAhC,SAAA;MAAA;IAAA,GAmBxB;IAED,IAAMsE,mBAAkB,GAAI,SAAtBA,mBAAkBA,CAAA,EAAU;MAChCpG,aAAa,CAACQ,KAAI,GAAI,CAACR,aAAa,CAACQ,KAAK;MAC1C,IAAMwE,MAAK,GAAIhF,aAAa,CAACQ,KAAI,GAAI,WAAU,GAAI,WAAW;MAC9DW,YAAY,IAAAG,MAAA,CAAI0D,MAAM,wBAAqB,CAAC;IAC9C,CAAC;;IAED;IACA1F,KAAK,CAACiB,aAAa,EAAE,UAAC8F,QAAQ,EAAK;MACjC,IAAIA,QAAQ,CAACvF,MAAK,GAAI,CAAC,EAAE;QACvBK,YAAY,cAAAG,MAAA,CAAc+E,QAAQ,CAACvF,MAAM,YAAS,CAAC;MACrD;IACF,CAAC,EAAE;MAAEwF,IAAI,EAAE;IAAK,CAAC,CAAC;;IAElB;IACAlH,SAAS,CAAC,YAAM;MACd+B,YAAY,CAAC,mCAAmC,CAAC;MACjDc,QAAQ,CAAC,CAAC;IACZ,CAAC,CAAC;IAEF,OAAO;MACL;MACAvC,KAAK,EAALA,KAAK;MACLC,IAAI,EAAJA,IAAI;MACJC,OAAO,EAAPA,OAAO;MACPC,KAAK,EAALA,KAAK;MACLC,cAAc,EAAdA,cAAc;MACdC,WAAW,EAAXA,WAAW;MACXC,aAAa,EAAbA,aAAa;MACbC,SAAS,EAATA,SAAS;MACTC,WAAW,EAAXA,WAAW;MACXC,aAAa,EAAbA,aAAa;MACbC,UAAU,EAAVA,UAAU;MACVC,iBAAiB,EAAjBA,iBAAiB;MACjBC,YAAY,EAAZA,YAAY;MAEZ;MACAC,aAAa,EAAbA,aAAa;MACbK,KAAK,EAALA,KAAK;MACLK,iBAAiB,EAAjBA,iBAAiB;MAEjB;MACAE,YAAY,EAAZA,YAAY;MACZQ,YAAY,EAAZA,YAAY;MACZC,WAAW,EAAXA,WAAW;MACXK,QAAQ,EAARA,QAAQ;MACR8B,WAAW,EAAXA,WAAW;MACXI,OAAO,EAAPA,OAAO;MACPQ,cAAc,EAAdA,cAAc;MACdY,gBAAgB,EAAhBA,gBAAgB;MAChBO,oBAAoB,EAApBA,oBAAoB;MACpBM,mBAAkB,EAAlBA;IACF,CAAC;EACH;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}